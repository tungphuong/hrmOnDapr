// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/dotnet-postgres
{
	"name": "C# (.NET) and PostgreSQL (Community)",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-azuretools.vscode-dapr",
				"ms-azuretools.vscode-docker",
				"ms-dotnettools.csharp",
				"ckolkman.vscode-postgres",
				"golang.go",
				"eamodio.gitlens",
				"ms-dotnettools.vscode-dotnet-runtime",
				"jmrog.vscode-nuget-package-manager",
				"oderwat.indent-rainbow",
				"mutantdino.resourcemonitor",
				"humao.rest-client"
			]
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		5100
	],
	// [Optional] To reuse of your local HTTPS dev cert:
	//
	// 1. Export it locally using this command:
	//    * Windows PowerShell:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//    * macOS/Linux terminal:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	// 
	// 2. Uncomment these 'remoteEnv' lines:
	//    "remoteEnv": {
	// 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
	//        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	//    },
	//
	// 3. Next, copy your certificate into the container:
	//      1. Start the container
	//      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
	//      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "dotnet --info",
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "root",
	"features": {
		"docker-from-docker": "20.10",
		"golang": "1.18"
	},
	"postCreateCommand": "dapr uninstall && dapr init --slim --network dapr-dev-container",
	"remoteEnv":{
		"ENABLE_DAPR": "true"		
	}
}